/* Animations for Rock Paper Battle */

/* Placeholder for shake animation - will be implemented later */
@keyframes shake {
    0% { transform: translateX(0); }
    25% { transform: translateX(-5px); }
    50% { transform: translateX(5px); }
    75% { transform: translateX(-5px); }
    100% { transform: translateX(0); }
}

/* Basic transitions */
.fade-in {
    animation: fadeIn 0.5s ease-in;
}

.fade-out {
    animation: fadeOut 0.5s ease-out;
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes fadeOut {
    from { opacity: 1; }
    to { opacity: 0; }
}

/* Button press effect */
.btn-press {
    animation: press 0.2s ease-in-out;
}

@keyframes press {
    0% { transform: scale(1); }
    50% { transform: scale(0.95); }
    100% { transform: scale(1); }
}

/* Fire move reveal animation */
@keyframes fireReveal {
    0% { 
        transform: scale(0) rotate(-180deg);
        opacity: 0;
        box-shadow: 0 0 0 rgba(255, 87, 34, 0);
    }
    50% {
        opacity: 1;
        box-shadow: 0 0 30px rgba(255, 87, 34, 0.8);
    }
    75% {
        transform: scale(1.2) rotate(10deg);
    }
    100% { 
        transform: scale(1) rotate(0);
        box-shadow: 0 0 15px rgba(255, 87, 34, 0.5);
    }
}

.fire-reveal {
    animation: fireReveal 1s ease-out forwards;
}

/* Fire move glow pulse */
@keyframes fireGlow {
    0% { box-shadow: 0 0 5px var(--special-move-color); }
    50% { box-shadow: 0 0 20px var(--special-move-color); }
    100% { box-shadow: 0 0 5px var(--special-move-color); }
}

.fire-glow {
    animation: fireGlow 2s infinite;
}

/* Avatar selection highlight */
@keyframes avatarHighlight {
    0% { transform: scale(1); border-color: transparent; }
    50% { transform: scale(1.1); border-color: var(--primary-color); }
    100% { transform: scale(1); border-color: var(--primary-color); }
}

.avatar-highlight {
    animation: avatarHighlight 0.5s ease-out forwards;
}

/* Settings panel slide */
@keyframes slideIn {
    from { transform: translateX(100%); }
    to { transform: translateX(0); }
}

.slide-in {
    animation: slideIn 0.3s ease-out forwards;
}

@keyframes slideOut {
    from { transform: translateX(0); }
    to { transform: translateX(100%); }
}

.slide-out {
    animation: slideOut 0.3s ease-in forwards;
}

/* Idle Animations */

/* Pulse animation for move buttons */
@keyframes idlePulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
}

.idle-pulse {
    animation: idlePulse 2s ease-in-out infinite;
}

/* Glow animation for player/AI choice areas */
@keyframes idleGlow {
    0% { 
        box-shadow: 0 0 5px rgba(var(--primary-color-rgb), 0.3);
        background-color: rgba(var(--primary-color-rgb), 0.02);
    }
    50% { 
        box-shadow: 0 0 15px rgba(var(--primary-color-rgb), 0.5);
        background-color: rgba(var(--primary-color-rgb), 0.08);
    }
    100% { 
        box-shadow: 0 0 5px rgba(var(--primary-color-rgb), 0.3);
        background-color: rgba(var(--primary-color-rgb), 0.02);
    }
}

.idle-glow {
    animation: idleGlow 3s ease-in-out infinite;
    border-radius: var(--border-radius);
}

/* Subtle background animation */
@keyframes idleBackground {
    0% { 
        box-shadow: inset 0 0 50px rgba(var(--primary-color-rgb), 0.02);
    }
    50% { 
        box-shadow: inset 0 0 100px rgba(var(--primary-color-rgb), 0.08);
    }
    100% { 
        box-shadow: inset 0 0 50px rgba(var(--primary-color-rgb), 0.02);
    }
}

.idle-background {
    animation: idleBackground 5s ease-in-out infinite;
}

/* AI personality animations */
@keyframes aiPulse {
    0% { transform: scale(1); opacity: 1; }
    50% { transform: scale(1.1); opacity: 0.8; }
    100% { transform: scale(1); opacity: 1; }
}

.ai-random-indicator {
    animation: aiPulse 3s ease-in-out infinite;
}

@keyframes aiCheeky {
    0% { transform: translateX(0) rotate(0); }
    25% { transform: translateX(-3px) rotate(-2deg); }
    75% { transform: translateX(3px) rotate(2deg); }
    100% { transform: translateX(0) rotate(0); }
}

.ai-cheeky-indicator {
    animation: aiCheeky 2s ease-in-out infinite;
}

@keyframes aiPredictive {
    0% { transform: scale(1); box-shadow: 0 0 0 rgba(0, 0, 255, 0); }
    50% { transform: scale(1.05); box-shadow: 0 0 15px rgba(0, 0, 255, 0.3); }
    100% { transform: scale(1); box-shadow: 0 0 0 rgba(0, 0, 255, 0); }
}

.ai-predictive-indicator {
    animation: aiPredictive 2.5s ease-in-out infinite;
}

/* Win/Loss/Draw Animations */

/* Confetti animation for wins */
@keyframes confetti {
    0% {
        transform: translate(0, 0) rotate(0deg);
        opacity: 1;
    }
    100% {
        transform: translate(var(--confetti-dx), 500px) rotate(var(--confetti-rotate));
        opacity: 0;
    }
}

.confetti-piece {
    position: absolute;
    width: 8px;
    height: 16px;
    background-color: var(--confetti-color);
    opacity: 0;
    animation: confetti 1s ease-in-out forwards;
    z-index: 100;
    pointer-events: none;
}

/* Shake animation for losses */
.shake-effect {
    animation: shake 0.5s ease-in-out;
}

/* Glow animation for draws */
@keyframes drawGlow {
    0% { box-shadow: 0 0 10px var(--draw-color); }
    50% { box-shadow: 0 0 20px var(--draw-color); }
    100% { box-shadow: 0 0 10px var(--draw-color); }
}

.draw-effect {
    animation: drawGlow 1s ease-in-out;
}

/* Bonus Round Animations */

/* Pulsing border for bonus round */
@keyframes bonusPulse {
    0% { box-shadow: 0 0 0px 0px var(--accent-color), inset 0 0 0px 0px var(--accent-color); }
    50% { box-shadow: 0 0 15px 2px var(--accent-color), inset 0 0 5px 1px var(--accent-color); }
    100% { box-shadow: 0 0 0px 0px var(--accent-color), inset 0 0 0px 0px var(--accent-color); }
}

.bonus-round {
    animation: bonusPulse 2s infinite;
}

/* Double points glow */
@keyframes doublePointsGlow {
    0% { box-shadow: 0 0 0px 0px gold, inset 0 0 0px 0px gold; }
    50% { box-shadow: 0 0 20px 3px gold, inset 0 0 7px 1px gold; }
    100% { box-shadow: 0 0 0px 0px gold, inset 0 0 0px 0px gold; }
}

.double-points {
    animation: doublePointsGlow 1.5s infinite;
}

/* Reverse rules spin */
@keyframes reverseRulesSpin {
    0% { transform: rotate(0deg); }
    15% { transform: rotate(-5deg); }
    30% { transform: rotate(5deg); }
    45% { transform: rotate(-3deg); }
    60% { transform: rotate(3deg); }
    75% { transform: rotate(-2deg); }
    85% { transform: rotate(1deg); }
    100% { transform: rotate(0deg); }
}

.reverse-rules {
    animation: reverseRulesSpin 5s infinite;
}

/* Chaos mode wobble */
@keyframes chaosWobble {
    0% { transform: skewX(0deg); }
    25% { transform: skewX(3deg); }
    50% { transform: skewX(-3deg); }
    75% { transform: skewX(2deg); }
    100% { transform: skewX(0deg); }
}

.chaos-mode {
    animation: chaosWobble 0.5s infinite;
}

/* Chaos mode button effect */
.chaos-mode-btn {
    position: relative;
    overflow: hidden;
}

.chaos-mode-btn::after {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
    animation: chaosGlint 2s infinite;
}

@keyframes chaosGlint {
    0% { left: -100%; }
    50% { left: 100%; }
    100% { left: 100%; }
}

/* Bonus notification animation */
@keyframes bonusNotificationIn {
    0% {
        transform: translate(-50%, 150%);
        opacity: 0;
    }
    50% {
        transform: translate(-50%, -10px);
    }
    70% {
        transform: translate(-50%, 5px);
    }
    100% {
        transform: translate(-50%, 0);
        opacity: 1;
    }
}

@keyframes bonusNotificationOut {
    0% {
        transform: translate(-50%, 0);
        opacity: 1;
    }
    100% {
        transform: translate(-50%, -150%);
        opacity: 0;
    }
}

.bonus-notification {
    position: fixed;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    opacity: 0;
    z-index: 1000;
}

.bonus-notification.show {
    animation: bonusNotificationIn 0.5s ease-out forwards, bonusNotificationOut 0.5s ease-in forwards 3.5s;
}

/* Speed Mode Animations */

/* Timer bar animation */
@keyframes timerWarningPulse {
    0% { background-color: var(--lose-color); }
    50% { background-color: #ff8080; }
    100% { background-color: var(--lose-color); }
}

.speed-timer.warning {
    animation: timerWarningPulse 0.5s infinite;
} 